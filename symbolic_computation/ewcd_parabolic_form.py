import sympy as sp

x, k, delta_x = sp.symbols('x k delta_x')

He_3_x = sp.hermite_prob(3, x)
He_4_x = sp.hermite_prob(4, x)
He_6_x = sp.hermite_prob(6, x)

He_3_x_dx = sp.hermite_prob(3, x + delta_x)
He_4_x_dx = sp.hermite_prob(4, x + delta_x)
He_6_x_dx = sp.hermite_prob(6, x + delta_x)

# s(k, x)
s_k_x = sp.sqrt(-72 / He_6_x - 3 * k * He_4_x / He_6_x + 36 * (He_3_x / He_6_x)**2) - 6 * He_3_x / He_6_x

# s(k, x + delta_x)
s_k_x_dx = sp.sqrt(-72 / He_6_x_dx - 3 * k * He_4_x_dx / He_6_x_dx + 36 * (He_3_x_dx / He_6_x_dx)**2) - 6 * He_3_x_dx / He_6_x_dx

# solve for k
equation = sp.Eq(s_k_x, s_k_x_dx)
solution = sp.solve(equation, k)

print(f"Intersection k depends on x and delta_x: {solution}")

# [24*((delta_x + 2*x)**2*(delta_x**4*x**4 - 6*delta_x**4*x**2 + 3*delta_x**4 + 4*delta_x**3*x**5 - 24*delta_x**3*x**3 + 12*delta_x**3*x + 6*delta_x**2*x**6 - 42*delta_x**2*x**4 + 66*delta_x**2*x**2 - 30*delta_x**2 + 4*delta_x*x**7 - 36*delta_x*x**5 + 108*delta_x*x**3 - 60*delta_x*x + x**8 - 12*x**6 + 54*x**4 - 60*x**2 + 45)**2*(-delta_x**5*x**3 + 3*delta_x**5*x - 6*delta_x**4*x**4 + 18*delta_x**4*x**2 - 15*delta_x**3*x**5 + 60*delta_x**3*x**3 - 45*delta_x**3*x - 19*delta_x**2*x**6 + 105*delta_x**2*x**4 - 135*delta_x**2*x**2 - 15*delta_x**2 - 12*delta_x*x**7 + 90*delta_x*x**5 - 180*delta_x*x**3 + 90*delta_x*x - 3*x**8 + 30*x**6 - 90*x**4 + 90*x**2 + 45)*sqrt(2*delta_x**8*x**4 - 12*delta_x**8*x**2 + 6*delta_x**8 + 20*delta_x**7*x**5 - 120*delta_x**7*x**3 + 60*delta_x**7*x + 89*delta_x**6*x**6 - 558*delta_x**6*x**4 + 441*delta_x**6*x**2 - 96*delta_x**6 + 230*delta_x**5*x**7 - 1566*delta_x**5*x**5 + 2046*delta_x**5*x**3 - 750*delta_x**5*x + 377*delta_x**4*x**8 - 2874*delta_x**4*x**6 + 5700*delta_x**4*x**4 - 3210*delta_x**4*x**2 + 459*delta_x**4 + 400*delta_x**3*x**9 - 3492*delta_x**3*x**7 + 9720*delta_x**3*x**5 - 8508*delta_x**3*x**3 + 2592*delta_x**3*x + 267*delta_x**2*x**10 - 2718*delta_x**2*x**8 + 10086*delta_x**2*x**6 - 13224*delta_x**2*x**4 + 6219*delta_x**2*x**2 - 594*delta_x**2 + 102*delta_x*x**11 - 1230*delta_x*x**9 + 5868*delta_x*x**7 - 10764*delta_x*x**5 + 7254*delta_x*x**3 - 1998*delta_x*x + 17*x**12 - 246*x**10 + 1467*x**8 - 3588*x**6 + 3627*x**4 - 1998*x**2 + 81) + (-delta_x**10*x**4 + 6*delta_x**10*x**2 - 3*delta_x**10 - 12*delta_x**9*x**5 + 72*delta_x**9*x**3 - 36*delta_x**9*x - 66*delta_x**8*x**6 + 417*delta_x**8*x**4 - 342*delta_x**8*x**2 + 75*delta_x**8 - 219*delta_x**7*x**7 + 1521*delta_x**7*x**5 - 2079*delta_x**7*x**3 + 741*delta_x**7*x - 486*delta_x**6*x**8 + 3834*delta_x**6*x**6 - 7902*delta_x**6*x**4 + 4428*delta_x**6*x**2 - 630*delta_x**6 - 755*delta_x**5*x**9 + 6912*delta_x**5*x**7 - 19656*delta_x**5*x**5 + 17220*delta_x**5*x**3 - 4833*delta_x**5*x - 833*delta_x**4*x**10 + 8946*delta_x**4*x**8 - 33012*delta_x**4*x**6 + 43188*delta_x**4*x**4 - 19503*delta_x**4*x**2 + 2070*delta_x**4 - 645*delta_x**3*x**11 + 8145*delta_x**3*x**9 - 37530*delta_x**3*x**7 + 69390*delta_x**3*x**5 - 47565*delta_x**3*x**3 + 11205*delta_x**3*x - 335*delta_x**2*x**12 + 4962*delta_x**2*x**10 - 27945*delta_x**2*x**8 + 69624*delta_x**2*x**6 - 69345*delta_x**2*x**4 + 27270*delta_x**2*x**2 - 2295*delta_x**2 - 105*delta_x*x**13 + 1818*delta_x*x**11 - 12375*delta_x*x**9 + 39852*delta_x*x**7 - 54675*delta_x*x**5 + 32130*delta_x*x**3 - 6885*delta_x*x - 15*x**14 + 303*x**12 - 2475*x**10 + 9963*x**8 - 18225*x**6 + 16065*x**4 - 6885*x**2 + 405)*(delta_x**10*x**8 - 12*delta_x**10*x**6 + 42*delta_x**10*x**4 - 36*delta_x**10*x**2 + 9*delta_x**10 + 12*delta_x**9*x**9 - 144*delta_x**9*x**7 + 504*delta_x**9*x**5 - 432*delta_x**9*x**3 + 108*delta_x**9*x + 64*delta_x**8*x**10 - 780*delta_x**8*x**8 + 2856*delta_x**8*x**6 - 2976*delta_x**8*x**4 + 1224*delta_x**8*x**2 - 180*delta_x**8 + 200*delta_x**7*x**11 - 2520*delta_x**7*x**9 + 10080*delta_x**7*x**7 - 13920*delta_x**7*x**5 + 8280*delta_x**7*x**3 - 1800*delta_x**7*x + 406*delta_x**6*x**12 - 5388*delta_x**6*x**10 + 24318*delta_x**6*x**8 - 44184*delta_x**6*x**6 + 34650*delta_x**6*x**4 - 11340*delta_x**6*x**2 + 1170*delta_x**6 + 560*delta_x**5*x**13 - 7968*delta_x**5*x**11 + 41328*delta_x**5*x**9 - 95424*delta_x**5*x**7 + 97488*delta_x**5*x**5 - 47520*delta_x**5*x**3 + 9360*delta_x**5*x + 532*delta_x**4*x**14 - 8244*delta_x**4*x**12 + 49476*delta_x**4*x**10 - 140820*delta_x**4*x**8 + 187308*delta_x**4*x**6 - 125100*delta_x**4*x**4 + 36540*delta_x**4*x**2 - 2700*delta_x**4 + 344*delta_x**3*x**15 - 5880*delta_x**3*x**13 + 40824*delta_x**3*x**11 - 140280*delta_x**3*x**9 + 239400*delta_x**3*x**7 - 206280*delta_x**3*x**5 + 88200*delta_x**3*x**3 - 16200*delta_x**3*x + 145*delta_x**2*x**16 - 2760*delta_x**2*x**14 + 22092*delta_x**2*x**12 - 90360*delta_x**2*x**10 + 193230*delta_x**2*x**8 - 209880*delta_x**2*x**6 + 128700*delta_x**2*x**4 - 37800*delta_x**2*x**2 + 2025*delta_x**2 + 36*delta_x*x**17 - 768*delta_x*x**15 + 7056*delta_x*x**13 - 33984*delta_x*x**11 + 88920*delta_x*x**9 - 120960*delta_x*x**7 + 101520*delta_x*x**5 - 43200*delta_x*x**3 + 8100*delta_x*x + 4*x**18 - 96*x**16 + 1008*x**14 - 5664*x**12 + 17784*x**10 - 30240*x**8 + 33840*x**6 - 21600*x**4 + 8100*x**2))/((delta_x + 2*x)**2*(delta_x**4*x**4 - 6*delta_x**4*x**2 + 3*delta_x**4 + 4*delta_x**3*x**5 - 24*delta_x**3*x**3 + 12*delta_x**3*x + 6*delta_x**2*x**6 - 42*delta_x**2*x**4 + 66*delta_x**2*x**2 - 30*delta_x**2 + 4*delta_x*x**7 - 36*delta_x*x**5 + 108*delta_x*x**3 - 60*delta_x*x + x**8 - 12*x**6 + 54*x**4 - 60*x**2 + 45)**2*(delta_x**10*x**8 - 12*delta_x**10*x**6 + 42*delta_x**10*x**4 - 36*delta_x**10*x**2 + 9*delta_x**10 + 12*delta_x**9*x**9 - 144*delta_x**9*x**7 + 504*delta_x**9*x**5 - 432*delta_x**9*x**3 + 108*delta_x**9*x + 64*delta_x**8*x**10 - 780*delta_x**8*x**8 + 2856*delta_x**8*x**6 - 2976*delta_x**8*x**4 + 1224*delta_x**8*x**2 - 180*delta_x**8 + 200*delta_x**7*x**11 - 2520*delta_x**7*x**9 + 10080*delta_x**7*x**7 - 13920*delta_x**7*x**5 + 8280*delta_x**7*x**3 - 1800*delta_x**7*x + 406*delta_x**6*x**12 - 5388*delta_x**6*x**10 + 24318*delta_x**6*x**8 - 44184*delta_x**6*x**6 + 34650*delta_x**6*x**4 - 11340*delta_x**6*x**2 + 1170*delta_x**6 + 560*delta_x**5*x**13 - 7968*delta_x**5*x**11 + 41328*delta_x**5*x**9 - 95424*delta_x**5*x**7 + 97488*delta_x**5*x**5 - 47520*delta_x**5*x**3 + 9360*delta_x**5*x + 532*delta_x**4*x**14 - 8244*delta_x**4*x**12 + 49476*delta_x**4*x**10 - 140820*delta_x**4*x**8 + 187308*delta_x**4*x**6 - 125100*delta_x**4*x**4 + 36540*delta_x**4*x**2 - 2700*delta_x**4 + 344*delta_x**3*x**15 - 5880*delta_x**3*x**13 + 40824*delta_x**3*x**11 - 140280*delta_x**3*x**9 + 239400*delta_x**3*x**7 - 206280*delta_x**3*x**5 + 88200*delta_x**3*x**3 - 16200*delta_x**3*x + 145*delta_x**2*x**16 - 2760*delta_x**2*x**14 + 22092*delta_x**2*x**12 - 90360*delta_x**2*x**10 + 193230*delta_x**2*x**8 - 209880*delta_x**2*x**6 + 128700*delta_x**2*x**4 - 37800*delta_x**2*x**2 + 2025*delta_x**2 + 36*delta_x*x**17 - 768*delta_x*x**15 + 7056*delta_x*x**13 - 33984*delta_x*x**11 + 88920*delta_x*x**9 - 120960*delta_x*x**7 + 101520*delta_x*x**5 - 43200*delta_x*x**3 + 8100*delta_x*x + 4*x**18 - 96*x**16 + 1008*x**14 - 5664*x**12 + 17784*x**10 - 30240*x**8 + 33840*x**6 - 21600*x**4 + 8100*x**2)), 24*((delta_x + 2*x)**2*(delta_x**4*x**4 - 6*delta_x**4*x**2 + 3*delta_x**4 + 4*delta_x**3*x**5 - 24*delta_x**3*x**3 + 12*delta_x**3*x + 6*delta_x**2*x**6 - 42*delta_x**2*x**4 + 66*delta_x**2*x**2 - 30*delta_x**2 + 4*delta_x*x**7 - 36*delta_x*x**5 + 108*delta_x*x**3 - 60*delta_x*x + x**8 - 12*x**6 + 54*x**4 - 60*x**2 + 45)**2*(delta_x**5*x**3 - 3*delta_x**5*x + 6*delta_x**4*x**4 - 18*delta_x**4*x**2 + 15*delta_x**3*x**5 - 60*delta_x**3*x**3 + 45*delta_x**3*x + 19*delta_x**2*x**6 - 105*delta_x**2*x**4 + 135*delta_x**2*x**2 + 15*delta_x**2 + 12*delta_x*x**7 - 90*delta_x*x**5 + 180*delta_x*x**3 - 90*delta_x*x + 3*x**8 - 30*x**6 + 90*x**4 - 90*x**2 - 45)*sqrt(2*delta_x**8*x**4 - 12*delta_x**8*x**2 + 6*delta_x**8 + 20*delta_x**7*x**5 - 120*delta_x**7*x**3 + 60*delta_x**7*x + 89*delta_x**6*x**6 - 558*delta_x**6*x**4 + 441*delta_x**6*x**2 - 96*delta_x**6 + 230*delta_x**5*x**7 - 1566*delta_x**5*x**5 + 2046*delta_x**5*x**3 - 750*delta_x**5*x + 377*delta_x**4*x**8 - 2874*delta_x**4*x**6 + 5700*delta_x**4*x**4 - 3210*delta_x**4*x**2 + 459*delta_x**4 + 400*delta_x**3*x**9 - 3492*delta_x**3*x**7 + 9720*delta_x**3*x**5 - 8508*delta_x**3*x**3 + 2592*delta_x**3*x + 267*delta_x**2*x**10 - 2718*delta_x**2*x**8 + 10086*delta_x**2*x**6 - 13224*delta_x**2*x**4 + 6219*delta_x**2*x**2 - 594*delta_x**2 + 102*delta_x*x**11 - 1230*delta_x*x**9 + 5868*delta_x*x**7 - 10764*delta_x*x**5 + 7254*delta_x*x**3 - 1998*delta_x*x + 17*x**12 - 246*x**10 + 1467*x**8 - 3588*x**6 + 3627*x**4 - 1998*x**2 + 81) + (-delta_x**10*x**4 + 6*delta_x**10*x**2 - 3*delta_x**10 - 12*delta_x**9*x**5 + 72*delta_x**9*x**3 - 36*delta_x**9*x - 66*delta_x**8*x**6 + 417*delta_x**8*x**4 - 342*delta_x**8*x**2 + 75*delta_x**8 - 219*delta_x**7*x**7 + 1521*delta_x**7*x**5 - 2079*delta_x**7*x**3 + 741*delta_x**7*x - 486*delta_x**6*x**8 + 3834*delta_x**6*x**6 - 7902*delta_x**6*x**4 + 4428*delta_x**6*x**2 - 630*delta_x**6 - 755*delta_x**5*x**9 + 6912*delta_x**5*x**7 - 19656*delta_x**5*x**5 + 17220*delta_x**5*x**3 - 4833*delta_x**5*x - 833*delta_x**4*x**10 + 8946*delta_x**4*x**8 - 33012*delta_x**4*x**6 + 43188*delta_x**4*x**4 - 19503*delta_x**4*x**2 + 2070*delta_x**4 - 645*delta_x**3*x**11 + 8145*delta_x**3*x**9 - 37530*delta_x**3*x**7 + 69390*delta_x**3*x**5 - 47565*delta_x**3*x**3 + 11205*delta_x**3*x - 335*delta_x**2*x**12 + 4962*delta_x**2*x**10 - 27945*delta_x**2*x**8 + 69624*delta_x**2*x**6 - 69345*delta_x**2*x**4 + 27270*delta_x**2*x**2 - 2295*delta_x**2 - 105*delta_x*x**13 + 1818*delta_x*x**11 - 12375*delta_x*x**9 + 39852*delta_x*x**7 - 54675*delta_x*x**5 + 32130*delta_x*x**3 - 6885*delta_x*x - 15*x**14 + 303*x**12 - 2475*x**10 + 9963*x**8 - 18225*x**6 + 16065*x**4 - 6885*x**2 + 405)*(delta_x**10*x**8 - 12*delta_x**10*x**6 + 42*delta_x**10*x**4 - 36*delta_x**10*x**2 + 9*delta_x**10 + 12*delta_x**9*x**9 - 144*delta_x**9*x**7 + 504*delta_x**9*x**5 - 432*delta_x**9*x**3 + 108*delta_x**9*x + 64*delta_x**8*x**10 - 780*delta_x**8*x**8 + 2856*delta_x**8*x**6 - 2976*delta_x**8*x**4 + 1224*delta_x**8*x**2 - 180*delta_x**8 + 200*delta_x**7*x**11 - 2520*delta_x**7*x**9 + 10080*delta_x**7*x**7 - 13920*delta_x**7*x**5 + 8280*delta_x**7*x**3 - 1800*delta_x**7*x + 406*delta_x**6*x**12 - 5388*delta_x**6*x**10 + 24318*delta_x**6*x**8 - 44184*delta_x**6*x**6 + 34650*delta_x**6*x**4 - 11340*delta_x**6*x**2 + 1170*delta_x**6 + 560*delta_x**5*x**13 - 7968*delta_x**5*x**11 + 41328*delta_x**5*x**9 - 95424*delta_x**5*x**7 + 97488*delta_x**5*x**5 - 47520*delta_x**5*x**3 + 9360*delta_x**5*x + 532*delta_x**4*x**14 - 8244*delta_x**4*x**12 + 49476*delta_x**4*x**10 - 140820*delta_x**4*x**8 + 187308*delta_x**4*x**6 - 125100*delta_x**4*x**4 + 36540*delta_x**4*x**2 - 2700*delta_x**4 + 344*delta_x**3*x**15 - 5880*delta_x**3*x**13 + 40824*delta_x**3*x**11 - 140280*delta_x**3*x**9 + 239400*delta_x**3*x**7 - 206280*delta_x**3*x**5 + 88200*delta_x**3*x**3 - 16200*delta_x**3*x + 145*delta_x**2*x**16 - 2760*delta_x**2*x**14 + 22092*delta_x**2*x**12 - 90360*delta_x**2*x**10 + 193230*delta_x**2*x**8 - 209880*delta_x**2*x**6 + 128700*delta_x**2*x**4 - 37800*delta_x**2*x**2 + 2025*delta_x**2 + 36*delta_x*x**17 - 768*delta_x*x**15 + 7056*delta_x*x**13 - 33984*delta_x*x**11 + 88920*delta_x*x**9 - 120960*delta_x*x**7 + 101520*delta_x*x**5 - 43200*delta_x*x**3 + 8100*delta_x*x + 4*x**18 - 96*x**16 + 1008*x**14 - 5664*x**12 + 17784*x**10 - 30240*x**8 + 33840*x**6 - 21600*x**4 + 8100*x**2))/((delta_x + 2*x)**2*(delta_x**4*x**4 - 6*delta_x**4*x**2 + 3*delta_x**4 + 4*delta_x**3*x**5 - 24*delta_x**3*x**3 + 12*delta_x**3*x + 6*delta_x**2*x**6 - 42*delta_x**2*x**4 + 66*delta_x**2*x**2 - 30*delta_x**2 + 4*delta_x*x**7 - 36*delta_x*x**5 + 108*delta_x*x**3 - 60*delta_x*x + x**8 - 12*x**6 + 54*x**4 - 60*x**2 + 45)**2*(delta_x**10*x**8 - 12*delta_x**10*x**6 + 42*delta_x**10*x**4 - 36*delta_x**10*x**2 + 9*delta_x**10 + 12*delta_x**9*x**9 - 144*delta_x**9*x**7 + 504*delta_x**9*x**5 - 432*delta_x**9*x**3 + 108*delta_x**9*x + 64*delta_x**8*x**10 - 780*delta_x**8*x**8 + 2856*delta_x**8*x**6 - 2976*delta_x**8*x**4 + 1224*delta_x**8*x**2 - 180*delta_x**8 + 200*delta_x**7*x**11 - 2520*delta_x**7*x**9 + 10080*delta_x**7*x**7 - 13920*delta_x**7*x**5 + 8280*delta_x**7*x**3 - 1800*delta_x**7*x + 406*delta_x**6*x**12 - 5388*delta_x**6*x**10 + 24318*delta_x**6*x**8 - 44184*delta_x**6*x**6 + 34650*delta_x**6*x**4 - 11340*delta_x**6*x**2 + 1170*delta_x**6 + 560*delta_x**5*x**13 - 7968*delta_x**5*x**11 + 41328*delta_x**5*x**9 - 95424*delta_x**5*x**7 + 97488*delta_x**5*x**5 - 47520*delta_x**5*x**3 + 9360*delta_x**5*x + 532*delta_x**4*x**14 - 8244*delta_x**4*x**12 + 49476*delta_x**4*x**10 - 140820*delta_x**4*x**8 + 187308*delta_x**4*x**6 - 125100*delta_x**4*x**4 + 36540*delta_x**4*x**2 - 2700*delta_x**4 + 344*delta_x**3*x**15 - 5880*delta_x**3*x**13 + 40824*delta_x**3*x**11 - 140280*delta_x**3*x**9 + 239400*delta_x**3*x**7 - 206280*delta_x**3*x**5 + 88200*delta_x**3*x**3 - 16200*delta_x**3*x + 145*delta_x**2*x**16 - 2760*delta_x**2*x**14 + 22092*delta_x**2*x**12 - 90360*delta_x**2*x**10 + 193230*delta_x**2*x**8 - 209880*delta_x**2*x**6 + 128700*delta_x**2*x**4 - 37800*delta_x**2*x**2 + 2025*delta_x**2 + 36*delta_x*x**17 - 768*delta_x*x**15 + 7056*delta_x*x**13 - 33984*delta_x*x**11 + 88920*delta_x*x**9 - 120960*delta_x*x**7 + 101520*delta_x*x**5 - 43200*delta_x*x**3 + 8100*delta_x*x + 4*x**18 - 96*x**16 + 1008*x**14 - 5664*x**12 + 17784*x**10 - 30240*x**8 + 33840*x**6 - 21600*x**4 + 8100*x**2))]